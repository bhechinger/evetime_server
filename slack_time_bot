#!/usr/bin/env python3
## -*- coding: utf-8 -*-
from flask import Flask, render_template, request
from slacker import Slacker
from pprint import pprint
from datetime import datetime
from pytz import timezone
import pytz, argparse, configparser, locale

locale.setlocale(locale.LC_ALL, 'en_US')
app = Flask(__name__)

parser = argparse.ArgumentParser(description='Send time in UTC plus conversion to requesting user\'s timezone')
parser.add_argument('-c', '--config', help='Config file [default is slack.conf in current dir]')
parser.add_argument('-d', '--debug', help='print debug output', action="store_true")
args = parser.parse_args()

if args.config:
    config_file = args.config
else:
    config_file = 'slack.conf'

config = configparser.ConfigParser()
config.read(config_file)

api_key = config.get('slack', 'api_key')
bot_name = config.get('bot', 'name')
bot_icon = config.get('bot', 'icon')

slack = Slacker(api_key)

def send_slack_msg(username):
    # Get users list
    response = slack.users.list()
    users = response.body['members']
    fmt = "%a, %d %b %Y %X"

    utc = pytz.utc

    for user in users:
        if user['name'] == username:
            user_tz = timezone(user['tz'])
            utc_dt = datetime.utcnow()
            utc_dt = pytz.utc.localize(utc_dt)
            loc_dt = utc_dt.astimezone(user_tz)
            slack.chat.post_message('#dev-chatter', '@{name}: The EVE time is {utc} and in {tz}: {local}'.format(name=user['name'], tz=user['tz_label'], utc=utc_dt.strftime(fmt), local=loc_dt.strftime(fmt)), username=bot_name, icon_url=bot_icon)

@app.route('/')
def index():
    return "Nothing to see here, move along!"

@app.route('/time_bot')
def time_bot_def():
    return "Please RTFM"

@app.route('/time_bot/<username>')
def time_bot(username):
    send_slack_msg(username)
    return "Sent slack message to {u}".format(u=username)

if __name__ == '__main__':
        app.run(debug=True)
